name: Deploy frontend image to ECR and update ArgoCD manifest

on:
  push:
    branches:
      - main
    paths:
      - '**'

jobs:
  detect-changes:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      frontend_changed: ${{ steps.set_output.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get previous commit SHA
        id: prev
        run: echo "before_sha=$(git rev-parse HEAD^1)" >> $GITHUB_OUTPUT

      - name: Check for frontend-relevant changes
        id: check
        run: |
          BEFORE=${{ steps.prev.outputs.before_sha }}
          AFTER=$(git rev-parse HEAD)
          CHANGED=$(git diff --name-only $BEFORE $AFTER | grep -E '^(src/|public/|package\.json|dockerfile)' || true)

          echo "✅ 변경된 파일 목록:"
          echo "$CHANGED"

          if [ -n "$CHANGED" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Set output
        id: set_output
        run: echo "changed=${{ steps.check.outputs.changed }}" >> $GITHUB_OUTPUT

  deploy-frontend:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get short SHA
        id: vars
        run: echo "sha_short=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create .env file
        run: echo "${{ secrets.FRONTEND_ENV_FILE }}" > .env

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build & Push Frontend Image
        run: |
          IMAGE=${{ secrets.ECR_REGISTRY }}/recipego-front:${{ steps.vars.outputs.sha_short }}
          docker build -t $IMAGE .
          docker push $IMAGE

      - name: Clone ArgoCD repo
        run: |
          git clone https://x-access-token:${{ secrets.ARGOCD_PUSH_TOKEN }}@github.com/OneOrTwo-oo2/argocd.git
          cd argocd
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      - name: Update Frontend image tag
        run: |
          sed -i "s|image: .*/recipego-front:.*|image: ${{ secrets.ECR_REGISTRY }}:${{ steps.vars.outputs.sha_short }}|" argocd/k8s/front/frontend-deployment.yaml

      - name: Commit & Push
        run: |
          cd argocd
          git add .
          git commit -m "🔄 Update frontend image tag to ${{ steps.vars.outputs.sha_short }}"
          git push origin main
