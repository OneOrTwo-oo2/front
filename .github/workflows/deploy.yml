on:
  push:
    branches:
      - main
    paths:
      - '**'

  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  detect-changes:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      frontend_changed: ${{ steps.set_output.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch origin/main
        run: git fetch origin main

      - name: Check for frontend-relevant changes
        id: check
        run: |
          BEFORE=$(git merge-base origin/main HEAD)
          echo "Comparing from $BEFORE to HEAD"
          CHANGED=$(git diff --name-only $BEFORE HEAD | grep -E '^(src/|public/|package\.json|dockerfile)' || true)
          if [ -n "$CHANGED" ]; then
            echo "✅ 변경된 파일 목록:"
            echo "$CHANGED"
            echo "changed=true" >> $GITHUB_ENV
          else
            echo "ℹ️ 프론트엔드 관련 변경 없음"
            echo "changed=false" >> $GITHUB_ENV
          fi

      - name: Set output
        id: set_output
        run: echo "changed=${{ env.changed }}" >> $GITHUB_OUTPUT

      - name: Debug output
        env:
          CHANGED: ${{ steps.set_output.outputs.changed }}
        run: echo "Frontend Changed: $CHANGED"

  deploy-frontend:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend_changed == 'true' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build & Push Frontend Image
        run: |
          IMAGE=${{ secrets.ECR_REGISTRY }}/front-web
          docker build -t $IMAGE .
          docker push $IMAGE
